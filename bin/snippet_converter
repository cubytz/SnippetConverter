#!/usr/bin/ruby -w
# frozen_string_literal: true

require 'snippet_converter'

# Parse the options to the converter
options = SnippetConverter.parse(ARGV)

# File or Directory required
unless options.file || options.directory
  puts 'No file or directory passed'
  exit
end

# Choose file over directory in case both are passed
if options.file
  if File.directory?(options.file) || !File.file?(options.file)
    puts "#{options.file} is not a snippet file"
    exit
  end

  files = options.file.split(',')
elsif options.directory
  if !File.directory?(options.directory) || File.file?(options.directory)
    puts "#{options.directory} is not a directory"
    exit
  end

  directory = options.directory
  directory += '/' unless options.directory[-1] == '/'

  files = Dir["#{directory}*.sublime-snippet"]
end

puts "#{files.count} files" if options.verbose

# Exit if no file found
exit unless files.size.positive?

# Create the directory
FileUtils.mkdir_p(options.destination) unless Dir.exist?(options.destination)

# Create a snippets hash
snippets = {}

# Loop through the files
files.each do |file|
  # Convert the files
  snippet = SnippetConverter.convert_to_vsc(file)
  snippets[snippet[:prefix]] = snippet
  if options.verbose
    # puts "### #{snippet[:prefix]} ###"
    # pp snippet.to_json
  end
end

case options.split
when true
  snippets.each do |key, value|
    snippet = {}
    snippet[key] = value
    filename = "#{options.destination}/#{key}.#{options.output}"
    SnippetConverter.write_file(filename, snippet)
  end
when false
  filename = "#{options.destination}/snippets.#{options.output}"
  SnippetConverter.write_file(filename, snippets)
end

puts JSON.pretty_generate(snippets) if options.verbose

puts 'Done'
